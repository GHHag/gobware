syntax = "proto3";

package main;

option go_package = "./gobwarerpc";

service GobwareService {
	rpc AddACLRule (AddACLRuleRequest) returns (AddACLRuleResponse);
	rpc CreateToken (CreateTokenRequest) returns (CreateTokenResponse);
	rpc CreateTokenPair (CreateTokenRequest) returns (CreateTokenPairResponse);
	rpc CheckAccess (CheckAccessTokenRequest) returns (CheckAccessTokenResponse);
	rpc CheckAccessToken (CheckAccessTokenRequest) returns (CheckAccessTokenResponse);
	rpc CheckRefreshToken (CheckRefreshTokenRequest) returns (CheckRefreshTokenResponse);
	//rpc Adapt () returns ();
}

message AddACLRuleRequest {
	string role = 1;
	string route = 2;
	repeated string httpMethods = 3;
}

message AddACLRuleResponse {
	bool successful = 1;
}

message CreateTokenRequest {
	map <string, string> data = 1;
}

message CreateTokenResponse {
	string encodedToken = 1;
}

// Remove and use CreateTokenRequest if they have the same definition
// message CreateTokenPairRequest {
// 	map <string, string> data = 1;
// }

message CreateTokenPairResponse {
	string encodedAccessToken = 1;
	string encodedRefreshToken = 2;
}

// message CheckAccessRequest {
// 	string encodedToken = 1;
// 	map <string, string> data = 2;
// }
//
// message CheckAccessResponse {
// 	bool access = 1;
// }

// message CheckTokenRequest {
// 	string encodedToken = 1;
// 	map <string, string> data = 2;
// }
//
// message CheckTokenResponse {
// 	bool access = 1;
// }
//
// message CheckTokenPairRequest {
// 	string encodedAccessToken = 1;
// 	string encodedRefreshToken = 2;
// 	map <string, string> data = 3;
// }
//
// message CheckTokenPairResponse {
// 	bool access = 1;
//
// }

message CheckAccessTokenRequest {
 	string encodedToken = 1;
 	map <string, string> data = 2;
}

message CheckAccessTokenResponse {
	bool access = 1;
}

message CheckRefreshTokenRequest {
 	string encodedAccessToken = 1;
 	string encodedRefreshToken = 2;
 	map <string, string> data = 3;
}

message CheckRefreshTokenResponse {
	bool access = 1;
	string encodedAccessToken = 2;
	string encodedRefreshToken = 3;
}

// message Adapt {
//
// }
